name: CI/CD Pipeline

on:
  push:
    branches:
      - development

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Build Docker image
      run: |
        docker build -t quiz .
        docker images
    - name: Log in to Docker Hub
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Tag Docker image with commit SHA
      run: docker tag quiz ${{ secrets.DOCKER_USERNAME }}/quiz:${{ github.sha }}

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/quiz:${{ github.sha }}

    - name: Update AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli
    - name: Configure AWS CLI
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_REGION }}
        
    - name: Get current ECS task definition revision
      id: ecs-task-revision
      run: |
        ecs_cluster_name="chandana-devops-task"
        ecs_task_definition="Task1-chandana-definition"
        echo "::set-output name=revision::$(aws ecs describe-task-definition --task-definition $ecs_task_definition --query 'taskDefinition.revision')"
    - name: Update ECS task definition with new image
      run: |
        ecs_cluster_name="chandana-devops-task"
        ecs_task_definition="Task1-chandana-definition"
        new_image_uri="${{ secrets.DOCKER_USERNAME }}/quiz:${{ github.sha }}"
        
        # Fetch the current task definition
        current_task_definition=$(aws ecs describe-task-definition --task-definition $ecs_task_definition)
        # Extract family name from the current task definition
        family_name=$(echo $current_task_definition | jq -r '.taskDefinition.family')
        # Extract container definition details
        container_definitions=$(echo $current_task_definition | jq -r '.taskDefinition.containerDefinitions')
        # Create a new container definition with the updated image URI and a default memory value
        updated_container_definition=$(echo $container_definitions | jq --arg new_image_uri "$new_image_uri" '.[0].image = $new_image_uri | .[0].memory = 256')
        # Register the updated task definition as a new revision
        updated_task_definition=$(aws ecs register-task-definition --family "$family_name" --container-definitions "$updated_container_definition" --query 'taskDefinition')
        # Extract the new revision number
        new_revision=$(echo $updated_task_definition | jq -r '.revision')
        echo "New revision created: $new_revision"
    - name: Update ECS service to use the latest task definition
      run: |
        ecs_cluster_name="chandana-devops-task"
        ecs_service_name="chandana-quiz"
        ecs_task_definition="Task1-chandana-definition"
    
        # Fetch the current task definition
        current_task_definition=$(aws ecs describe-task-definition --task-definition $ecs_task_definition)
    
        # Extract the launch type from the current task definition
        launch_type=$(echo $current_task_definition | jq -r '.taskDefinition.requiresCompatibilities[0]')
      
        # Use the correct launch type when updating the service
        if [ "$launch_type" == "FARGATE" ]; then
          updated_task_definition_arn=$(aws ecs describe-task-definition --task-definition $ecs_task_definition --query 'taskDefinition.taskDefinitionArn' --output text)
          aws ecs update-service --cluster $ecs_cluster_name --service $ecs_service_name --task-definition $updated_task_definition_arn --launch-type FARGATE --network-configuration "awsvpcConfiguration={subnets=[subnet-12345678],securityGroups=[sg-12345678],assignPublicIp=ENABLED}" --force-new-deployment --debug
        else
          # Update service for EC2 launch type
          updated_task_definition_arn=$(aws ecs describe-task-definition --task-definition $ecs_task_definition --query 'taskDefinition.taskDefinitionArn' --output text)
          aws ecs update-service --cluster $ecs_cluster_name --service $ecs_service_name --task-definition $updated_task_definition_arn --launch-type EC2 --force-new-deployment --debug
        fi
